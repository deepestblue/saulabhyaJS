import { transliterate, } from "../src/saulabhya.js";

QUnit.config.maxDepth = -1;
QUnit.config.noglobals = true;

QUnit.module("Taml unit tests", () => {
    const data = {
        Taml: [
            "роЕ роЖ роЗ роИ роЙ роК роО роП роР роТ роУ роФ роГ",
            "роХ роХро╛ роХро┐ роХрпА роХрпБ роХрпВ роХрпЖ роХрпЗ роХрпИ роХрпК роХрпЛ роХрпМ",
            "роХрпН роЩрпН роЪрпН роЮрпН роЯрпН рогрпН ро▒рпН ройрпН родрпН роирпН рокрпН роорпН ропрпН ро░рпН ро▓рпН ро╡рпН ро┤рпН ро│рпН",
            "роХ роЩ роЪ роЮ роЯ рог ро▒ рой род рои рок роо роп ро░ ро▓ ро╡ ро┤ ро│",
            "роЕроЕроХрпНроХрпН",
            "роХрпНроХ",
            "ро▓роЕ",
            "роЩроЮрпНроЯрпЛ",
            "роЕроК",
            "роЗроУроРроЕроУройро┐ро▒рпАройрпМро│роИроЕ",
            "роХрпз",
            "рпироЩ",
        ],
        Latn: [
            "a a╠Д i i╠Д u u╠Д e e╠Д ai o o╠Д au k╠▒",
            "ka ka╠Д ki ki╠Д ku ku╠Д ke ke╠Д kai ko ko╠Д kau",
            "k n╠З c n╠Г t╠г n╠г t╠▒ n╠▒ t n p m y r l╠▒ v r╠г l╠г",
            "ka n╠Зa ca n╠Гa t╠гa n╠гa t╠▒a n╠▒a ta na pa ma ya ra l╠▒a va r╠гa l╠гa",
            "aakk",
            "kka",
            "l╠▒aa",
            "n╠Зan╠Гt╠гo╠Д",
            "au╠Д",
            "io╠Дaiao╠Дn╠▒it╠▒i╠Дn╠▒aul╠гai╠Дa",
            "ka1",
            "2n╠Зa",
        ],
    };
    QUnit.module("To Latin", () => {
        [...Array(data.Taml.length,).keys(),].forEach(i => {
            QUnit.test(data.Taml[i], t => {
                t.deepEqual(
                    transliterate("Taml", "Latn", data.Taml[i],),
                    data.Latn[i],);
            },);
        },);
    },);
    QUnit.module("From Latin", () => {
        [...Array(data.Latn.length,).keys(),].forEach(i => {
            QUnit.test(data.Latn[i], t => {
                t.deepEqual(
                    transliterate("Latn", "Taml", data.Latn[i],),
                    data.Taml[i],);
            },);
        },);
    },);
},);

QUnit.module("Telu unit tests", () => {
    const data = {
        Telu: [
            "р░Е р░Ж р░З р░И р░Й р░К р░О р░П р░Р р░Т р░У р░Ф",
            "р░Х р░Хр░╛ р░Хр░┐ р░Хр▒А р░Хр▒Б р░Хр▒В р░Хр▒Ж р░Хр▒З р░Хр▒И р░Хр▒К р░Хр▒Л р░Хр▒М",
            "р░Хр▒Н р░Щр▒Н р░Ър▒Н р░Юр▒Н р░Яр▒Н р░гр▒Н р░▒р▒Н р░йр▒Н р░др▒Н р░ир▒Н р░кр▒Н р░ор▒Н р░пр▒Н р░░р▒Н р░▓р▒Н р░╡р▒Н р░┤р▒Н р░│р▒Н",
            "р░Х р░Щ р░Ъ р░Ю р░Я р░г р░▒ р░й р░д р░и р░к р░о р░п р░░ р░▓ р░╡ р░┤ р░│",
        ],
        Latn: [
            "a a╠Д i i╠Д u u╠Д e e╠Д ai o o╠Д au",
            "ka ka╠Д ki ki╠Д ku ku╠Д ke ke╠Д kai ko ko╠Д kau",
            "k n╠З c n╠Г t╠г n╠г t╠▒ n╠▒ t n p m y r l╠▒ v r╠г l╠г",
            "ka n╠Зa ca n╠Гa t╠гa n╠гa t╠▒a n╠▒a ta na pa ma ya ra l╠▒a va r╠гa l╠гa",
        ],
    };
    QUnit.module("To Latin", () => {
        [...Array(data.Telu.length,).keys(),].forEach(i => {
            QUnit.test(data.Telu[i], t => {
                t.deepEqual(
                    transliterate("Telu", "Latn", data.Telu[i],),
                    data.Latn[i],);
            },);
        },);
    },);
    QUnit.module("From Latin", () => {
        [...Array(data.Latn.length,).keys(),].forEach(i => {
            QUnit.test(data.Latn[i], t => {
                t.deepEqual(
                    transliterate("Latn", "Telu", data.Latn[i],),
                    data.Telu[i],);
            },);
        },);
    },);
},);

QUnit.module("Knda unit tests", () => {
    const data = {
        Knda: [
            "р▓Е р▓Ж р▓З р▓И р▓Й р▓К р▓О р▓П р▓Р р▓Т р▓У р▓Ф",
            "р▓Х р▓Хр▓╛ р▓Хр▓┐ р▓Хр│А р▓Хр│Б р▓Хр│В р▓Хр│Ж р▓Хр│З р▓Хр│И р▓Хр│К р▓Хр│Л р▓Хр│М",
            "р▓Хр│Н р▓Щр│Н р▓Ър│Н р▓Юр│Н р▓Яр│Н р▓гр│Н р▓▒р│Н р▓┤р│Н р▓др│Н р▓ир│Н р▓кр│Н р▓ор│Н р▓пр│Н р▓░р│Н р▓▓р│Н р▓╡р│Н р│Юр│Н р▓│р│Н",
            "р▓Х р▓Щ р▓Ъ р▓Ю р▓Я р▓г р▓▒ р▓┤ р▓д р▓и р▓к р▓о р▓п р▓░ р▓▓ р▓╡ р│Ю р▓│",
        ],
        Latn: [
            "a a╠Д i i╠Д u u╠Д e e╠Д ai o o╠Д au",
            "ka ka╠Д ki ki╠Д ku ku╠Д ke ke╠Д kai ko ko╠Д kau",
            "k n╠З c n╠Г t╠г n╠г t╠▒ n╠▒ t n p m y r l╠▒ v r╠г l╠г",
            "ka n╠Зa ca n╠Гa t╠гa n╠гa t╠▒a n╠▒a ta na pa ma ya ra l╠▒a va r╠гa l╠гa",
        ],
    };
    QUnit.module("To Latin", () => {
        [...Array(data.Knda.length,).keys(),].forEach(i => {
            QUnit.test(data.Knda[i], t => {
                t.deepEqual(
                    transliterate("Knda", "Latn", data.Knda[i],),
                    data.Latn[i],);
            },);
        },);
    },);
    QUnit.module("From Latin", () => {
        [...Array(data.Latn.length,).keys(),].forEach(i => {
            QUnit.test(data.Latn[i], t => {
                t.deepEqual(
                    transliterate("Latn", "Knda", data.Latn[i],),
                    data.Knda[i],);
            },);
        },);
    },);
},);

QUnit.module("Gran unit tests", () => {
    const data = {
        Gran: [
            "ЁСМЕ ЁСМЖ ЁСМЗ ЁСМИ ЁСМЙ ЁСМК ЁСМЛ ЁСНа ЁСММ ЁСНб ЁСМП ЁСМР ЁСМУ ЁСМФ ЁСМЕЁСМВ ЁСМЕЁСМБ ЁСМЕЁСМГ",
            "ЁСМХ ЁСМХЁСМ╛ ЁСМХЁСМ┐ ЁСМХЁСНА ЁСМХЁСНБ ЁСМХЁСНВ ЁСМХЁСНГ ЁСМХЁСНД ЁСМХЁСНв ЁСМХЁСНг ЁСМХЁСНЗ ЁСМХЁСНИ ЁСМХЁСНЛ ЁСМХЁСНМ ЁСМХЁСМВ ЁСМХЁСМБ ЁСМХЁСМГ",
            "ЁСМХЁСНН ЁСМЦЁСНН ЁСМЧЁСНН ЁСМШЁСНН ЁСМЩЁСНН ЁСМЪЁСНН ЁСМЫЁСНН ЁСМЬЁСНН ЁСМЭЁСНН ЁСМЮЁСНН ЁСМЯЁСНН ЁСМаЁСНН ЁСМбЁСНН ЁСМвЁСНН ЁСМгЁСНН ЁСМдЁСНН ЁСМеЁСНН ЁСМжЁСНН ЁСМзЁСНН ЁСМиЁСНН ЁСМкЁСНН ЁСМлЁСНН ЁСМмЁСНН ЁСМнЁСНН ЁСМоЁСНН ЁСМпЁСНН ЁСМ░ЁСНН ЁСМ▓ЁСНН ЁСМ│ЁСНН ЁСМ╡ЁСНН ЁСМ╢ЁСНН ЁСМ╖ЁСНН ЁСМ╕ЁСНН ЁСМ╣ЁСНН",
            "ЁСМХ ЁСМЦ ЁСМЧ ЁСМШ ЁСМЩ ЁСМЪ ЁСМЫ ЁСМЬ ЁСМЭ ЁСМЮ ЁСМЯ ЁСМа ЁСМб ЁСМв ЁСМг ЁСМд ЁСМе ЁСМж ЁСМз ЁСМи ЁСМк ЁСМл ЁСМм ЁСМн ЁСМо ЁСМп ЁСМ░ ЁСМ▓ ЁСМ│ ЁСМ╡ ЁСМ╢ ЁСМ╖ ЁСМ╕ ЁСМ╣",
            "ЁСМХЁСМ╛ ЁСМЦЁСМ╛ ЁСМЧЁСМ╛ ЁСМШЁСМ╛ ЁСМЩЁСМ╛ ЁСМЪЁСМ╛ ЁСМЫЁСМ╛ ЁСМЬЁСМ╛ ЁСМЭЁСМ╛ ЁСМЮЁСМ╛ ЁСМЯЁСМ╛ ЁСМаЁСМ╛ ЁСМбЁСМ╛ ЁСМвЁСМ╛ ЁСМгЁСМ╛ ЁСМдЁСМ╛ ЁСМеЁСМ╛ ЁСМжЁСМ╛ ЁСМзЁСМ╛ ЁСМиЁСМ╛ ЁСМкЁСМ╛ ЁСМлЁСМ╛ ЁСМмЁСМ╛ ЁСМнЁСМ╛ ЁСМоЁСМ╛ ЁСМпЁСМ╛ ЁСМ░ЁСМ╛ ЁСМ▓ЁСМ╛ ЁСМ│ЁСМ╛ ЁСМ╡ЁСМ╛ ЁСМ╢ЁСМ╛ ЁСМ╖ЁСМ╛ ЁСМ╕ЁСМ╛ ЁСМ╣ЁСМ╛",
            "ЁСМЕЁСМЕЁСМХЁСННЁСМХЁСНН",
            "ЁСМХЁСННЁСМХ",
            "ЁСМ▓ЁСМЕ",
            "ЁСМЩЁСМЮЁСННЁСМЯЁСНЛ",
            "ЁСМЕЁСМК",
            "ЁСМЗЁСМУЁСМРЁСМЕЁСМУЁСМиЁСМ┐ЁСМдЁСНАЁСМиЁСНМЁСМ│ЁСМИЁСМЕ",
            "ЁСМЕЁСМЧЁСННЁСМГ",
            "ЁСМмЁСННЁСМ╣ЁСМгЁСННЁСМ╣ЁСМкЁСМЗЁСМЪЁСННЁСМ╣ЁСМЙЁСМЕЁСМЗЁСМЕЁСМУ",
        ],
        Latn: [
            "a a╠Д i i╠Д u u╠Д r╠е r╠е╠Д l╠е l╠е╠Д e╠Д ai o╠Д au am╠З am╠Р ah╠г",
            "ka ka╠Д ki ki╠Д ku ku╠Д kr╠е kr╠е╠Д kl╠е kl╠е╠Д ke╠Д kai ko╠Д kau kam╠З kam╠Р kah╠г",
            "k kh g gh n╠З c ch j jh n╠Г t╠г t╠гh d╠г d╠гh n╠г t th d dh n p ph b bh m y r l l╠г v s╠Б s╠г s h",
            "ka kha ga gha n╠Зa ca cha ja jha n╠Гa t╠гa t╠гha d╠гa d╠гha n╠гa ta tha da dha na pa pha ba bha ma ya ra la l╠гa va s╠Бa s╠гa sa ha",
            "ka╠Д kha╠Д ga╠Д gha╠Д n╠Зa╠Д ca╠Д cha╠Д ja╠Д jha╠Д n╠Гa╠Д t╠гa╠Д t╠гha╠Д d╠гa╠Д d╠гha╠Д n╠гa╠Д ta╠Д tha╠Д da╠Д dha╠Д na╠Д pa╠Д pha╠Д ba╠Д bha╠Д ma╠Д ya╠Д ra╠Д la╠Д l╠гa╠Д va╠Д s╠Бa╠Д s╠гa╠Д sa╠Д ha╠Д",
            "aakk",
            "kka",
            "laa",
            "n╠Зan╠Гt╠гo╠Д",
            "au╠Д",
            "io╠Дaiao╠Дniti╠Дnaul╠гai╠Дa",
            "agh╠г",
            "b:han╠гhapa:ic:ha:ua:iao╠Д",
        ],
    };
    QUnit.module("To Latin", () => {
        [...Array(data.Gran.length,).keys(),].forEach(i => {
            QUnit.test(data.Gran[i], t => {
                t.deepEqual(
                    transliterate("Gran", "Latn", data.Gran[i],),
                    data.Latn[i],);
            },);
        },);
    },);
    QUnit.module("From Latin", () => {
        [...Array(data.Latn.length,).keys(),].forEach(i => {
            QUnit.test(data.Latn[i], t => {
                t.deepEqual(
                    transliterate("Latn", "Gran", data.Latn[i],),
                    data.Gran[i],);
            },);
        },);
    },);
},);

QUnit.module("Deva unit tests", () => {
    const data = {
        Deva: [
            "рдЕ рдЖ рдЗ рдИ рдЙ рдК рдЛ реа рдМ реб рдП рдР рдУ рдФ рдЕрдВ рдЕрдБ рдЕрдГ",
            "рдХ рдХрд╛ рдХрд┐ рдХреА рдХреБ рдХреВ рдХреГ рдХреД рдХрев рдХрег рдХреЗ рдХреИ рдХреЛ рдХреМ рдХрдВ рдХрдБ рдХрдГ",
            "рдХреН рдЦреН рдЧреН рдШреН рдЩреН рдЪреН рдЫреН рдЬреН рдЭреН рдЮреН рдЯреН рдареН рдбреН рдвреН рдгреН рддреН рдереН рджреН рдзреН рдиреН рдкреН рдлреН рдмреН рднреН рдореН рдпреН рд░реН рд▓реН рд│реН рд╡реН рд╢реН рд╖реН рд╕реН рд╣реН",
            "рдХ рдЦ рдЧ рдШ рдЩ рдЪ рдЫ рдЬ рдЭ рдЮ рдЯ рда рдб рдв рдг рдд рде рдж рдз рди рдк рдл рдм рдн рдо рдп рд░ рд▓ рд│ рд╡ рд╢ рд╖ рд╕ рд╣",
            "рдХрд╛ рдЦрд╛ рдЧрд╛ рдШрд╛ рдЩрд╛ рдЪрд╛ рдЫрд╛ рдЬрд╛ рдЭрд╛ рдЮрд╛ рдЯрд╛ рдард╛ рдбрд╛ рдврд╛ рдгрд╛ рддрд╛ рдерд╛ рджрд╛ рдзрд╛ рдирд╛ рдкрд╛ рдлрд╛ рдмрд╛ рднрд╛ рдорд╛ рдпрд╛ рд░рд╛ рд▓рд╛ рд│рд╛ рд╡рд╛ рд╢рд╛ рд╖рд╛ рд╕рд╛ рд╣рд╛",
            "рдЕрдЕрдХреНрдХреН",
            "рдХреНрдХ",
            "рд▓рдЕ",
            "рдЩрдЮреНрдЯреЛ",
            "рдЕрдК",
            "рдЗрдУрдРрдЕрдУрдирд┐рддреАрдиреМрд│рдИрдЕ",
            "рдЕрдЧреНрдГ",
            "рдмреНрд╣рдгреНрд╣рдкрдЗрдЪреНрд╣рдЙрдЕрдЗрдЕрдУ",
        ],
        Latn: [
            "a a╠Д i i╠Д u u╠Д r╠е r╠е╠Д l╠е l╠е╠Д e╠Д ai o╠Д au am╠З am╠Р ah╠г",
            "ka ka╠Д ki ki╠Д ku ku╠Д kr╠е kr╠е╠Д kl╠е kl╠е╠Д ke╠Д kai ko╠Д kau kam╠З kam╠Р kah╠г",
            "k kh g gh n╠З c ch j jh n╠Г t╠г t╠гh d╠г d╠гh n╠г t th d dh n p ph b bh m y r l l╠г v s╠Б s╠г s h",
            "ka kha ga gha n╠Зa ca cha ja jha n╠Гa t╠гa t╠гha d╠гa d╠гha n╠гa ta tha da dha na pa pha ba bha ma ya ra la l╠гa va s╠Бa s╠гa sa ha",
            "ka╠Д kha╠Д ga╠Д gha╠Д n╠Зa╠Д ca╠Д cha╠Д ja╠Д jha╠Д n╠Гa╠Д t╠гa╠Д t╠гha╠Д d╠гa╠Д d╠гha╠Д n╠гa╠Д ta╠Д tha╠Д da╠Д dha╠Д na╠Д pa╠Д pha╠Д ba╠Д bha╠Д ma╠Д ya╠Д ra╠Д la╠Д l╠гa╠Д va╠Д s╠Бa╠Д s╠гa╠Д sa╠Д ha╠Д",
            "aakk",
            "kka",
            "laa",
            "n╠Зan╠Гt╠гo╠Д",
            "au╠Д",
            "io╠Дaiao╠Дniti╠Дnaul╠гai╠Дa",
            "agh╠г",
            "b:han╠гhapa:ic:ha:ua:iao╠Д",
        ],
    };
    QUnit.module("To Latin", () => {
        [...Array(data.Deva.length,).keys(),].forEach(i => {
            QUnit.test(data.Deva[i], t => {
                t.deepEqual(
                    transliterate("Deva", "Latn", data.Deva[i],),
                    data.Latn[i],);
            },);
        },);
    },);
    QUnit.module("From Latin", () => {
        [...Array(data.Latn.length,).keys(),].forEach(i => {
            QUnit.test(data.Latn[i], t => {
                t.deepEqual(
                    transliterate("Latn", "Deva", data.Latn[i],),
                    data.Deva[i],);
            },);
        },);
    },);
},);

QUnit.module("Numbers", () => {
    const data = {
        Taml: [
            "рпж",
            "рпз рпи рпй рпк рпл рпм рпн рпо рпп",
            "рп░ рп▒",
            "рп▒рп░рпз рп▒рпкрп░рпз рпирп▒рп░рпй рппрп▒рпнрп░рпз рппрп▒рпорп░рпл",
            "рп▓",
            "рпирп▓рп░рпй",
            "рп░рп▓",
            "рп░рпзрп▓",
            "рпирп░рп▓рпй",
            "рп▓рп▓",
            "рп░рп▓рп▓",
            "рп░рпзрп▓рп▓рп▒рп░рпзрп▓рп▒рп░рпз",
            "рпирп░рп▓рп▓рп░рпй",
            "рпирп░рпйрп▓рп▓рпмрп▒рплрп░рп▓рплрп▒рпмрп░рпм",
            "рп▒рпирп░рпйрп▓рп▓рп▓рпкрп▒рплрп░рпмрп▓рп▓рпнрп▒рпорп░рппрп▓рпирп▒рпйрп░рпк",
        ],
        Telu: [
            "р▒ж",
            "р▒з р▒и р▒й р▒к р▒л р▒м р▒н р▒о р▒п",
            "р▒зр▒ж р▒зр▒жр▒ж",
            "р▒зр▒зр▒з р▒зр▒кр▒з р▒ир▒зр▒й р▒пр▒нр▒з р▒пр▒ор▒л",
            "р▒зр▒жр▒жр▒ж",
            "р▒ир▒жр▒зр▒й",
            "р▒зр▒жр▒жр▒жр▒ж",
            "р▒зр▒зр▒жр▒жр▒ж",
            "р▒ир▒жр▒жр▒жр▒й",
            "р▒зр▒жр▒жр▒жр▒жр▒жр▒ж",
            "р▒зр▒жр▒жр▒жр▒жр▒жр▒жр▒ж",
            "р▒зр▒зр▒зр▒зр▒зр▒зр▒зр▒з",
            "р▒ир▒жр▒жр▒жр▒жр▒жр▒зр▒й",
            "р▒ир▒йр▒мр▒лр▒жр▒лр▒мр▒м",
            "р▒зр▒ир▒йр▒кр▒лр▒мр▒нр▒ор▒пр▒ир▒йр▒к",
        ],
        Deva: [
            "реж",
            "рез реи рей рек рел рем рен рео реп",
            "резреж резрежреж",
            "резрезрез резрекрез реирезрей репренрез репреорел",
            "резрежрежреж",
            "реирежрезрей",
            "резрежрежрежреж",
            "резрезрежрежреж",
            "реирежрежрежрей",
            "резрежрежрежрежрежреж",
            "резрежрежрежрежрежрежреж",
            "резрезрезрезрезрезрезрез",
            "реирежрежрежрежрежрезрей",
            "реирейремрелрежрелремрем",
            "резреирейрекрелремренреорепреирейрек",
        ],
        Latn: [
            "0",
            "1 2 3 4 5 6 7 8 9",
            "10 100",
            "111 141 213 971 985",
            "1000",
            "2013",
            "10000",
            "11000",
            "20003",
            "1000000",
            "10000000",
            "11111111",
            "20000013",
            "23650566",
            "123456789234",
        ],
    };
    [...Array(data.Latn.length,).keys(),].forEach(i => {
        QUnit.test(`родрооро┐ро┤рпН ${data.Taml[i]}`, t => {
            t.deepEqual(
                transliterate("Taml", "Latn", data.Taml[i],),
                data.Latn[i],);
        },);
        QUnit.test(`${data.Latn[i]} тЖТ родрооро┐ро┤рпН`, t => {
            t.deepEqual(
                transliterate("Latn", "Taml", data.Latn[i],),
                data.Taml[i],);
        },);
        QUnit.test(`р░др▒Жр░▓р▒Бр░Чр▒Б ${data.Telu[i]}`, t => {
            t.deepEqual(
                transliterate("Telu", "Latn", data.Telu[i],),
                data.Latn[i],);
        },);
        QUnit.test(`${data.Latn[i]} тЖТ р░др▒Жр░▓р▒Бр░Чр▒Б`, t => {
            t.deepEqual(
                transliterate("Latn", "Telu", data.Latn[i],),
                data.Telu[i],);
        },);
        QUnit.test(`рджреЗрд╡рдирд╛рдЧрд░реА ${data.Deva[i]}`, t => {
            t.deepEqual(
                transliterate("Deva", "Latn", data.Deva[i],),
                data.Latn[i],);
        },);
        QUnit.test(`${data.Latn[i]} тЖТ рджреЗрд╡рдирд╛рдЧрд░реА`, t => {
            t.deepEqual(
                transliterate("Latn", "Deva", data.Latn[i],),
                data.Deva[i],);
        },);
    },);
},);

QUnit.module("Integration tests", () => {
    QUnit.module("Trivial transliteration", () => {
        QUnit.test("Transliterate from Taml to Taml", t => {
            const trivialTestText = "родрооро┐ро┤ро┐ро▓ро┐ро░рпБроирпНродрпБ родрооро┐ро┤рпН роОро│ро┐родрпБ.";
            t.deepEqual(
                transliterate("Taml", "Taml", trivialTestText,),
                trivialTestText,);
        },);
    },);
    QUnit.module("ta", () => {
        const textWithPunctuationAndSpacing = {
            Taml: `
рооройро┐родрокрпН рокро┐ро▒ро╡ро┐ропро┐ройро░рпН роЪроХро▓ро░рпБроорпН роЪрпБродроирпНродро┐ро░рооро╛роХро╡рпЗ рокро┐ро▒роХрпНроХро┐ройрпНро┤ройро░рпН. роЕро╡ро░рпНроХро│рпН роородро┐рокрпНрокро┐ро▓рпБроорпН роЙро░ро┐роорпИроХро│ро┐ро▓рпБроорпН роЪроорооро╛ройро╡ро░рпНроХро│рпН. роЕро╡ро░рпНроХро│рпН роиро┐ропро╛ропродрпНродрпИропрпБроорпН рооройроЪро╛роЯрпНроЪро┐ропрпИропрпБроорпН роЗропро▒рпНрокрогрпНрокро╛роХрокрпН рокрпЖро▒рпНро▒ро╡ро░рпНроХро│рпН. роЕро╡ро░рпНроХро│рпН роТро░рпБро╡ро░рпБроЯройрпКро░рпБро╡ро░рпН роЪроХрпЛродро░ роЙрогро░рпНро╡рпБрокрпН рокро╛роЩрпНроХро┐ро▓рпН роироЯроирпНродрпБроХрпКро│рпНро│ро▓рпН ро╡рпЗрогрпНроЯрпБроорпН.

рпирп▒рпйро╡родрпБ рооройро┐родройрпН.

роЪроирпНродроЯро┐ропрпЖройрпНро▒рпБ рооро▒роирпНродро╛ропрпЛ! роЗроЩрпНроХро┐ро▓рпНро▓рпИропрпЛ! роОродро▒рпНроХрпБ родропрпИ ро╡ро░ро╛родрпБроЯро╛? роЗро░ро╛роороЪрпНроЪроирпНродро┐ро░ро╛!
        `,
            Knda: `
р▓ор▓┤р▓┐р▓др▓кр│Н р▓кр▓┐р▓▒р▓╡р▓┐р▓пр▓┐р▓┤р▓░р│Н р▓Ър▓Хр▓▓р▓░р│Бр▓ор│Н р▓Ър│Бр▓др▓ир│Нр▓др▓┐р▓░р▓ор▓╛р▓Хр▓╡р│З р▓кр▓┐р▓▒р▓Хр│Нр▓Хр▓┐р▓┤р│Нр│Юр▓┤р▓░р│Н. р▓Ер▓╡р▓░р│Нр▓Хр▓│р│Н р▓ор▓др▓┐р▓кр│Нр▓кр▓┐р▓▓р│Бр▓ор│Н р▓Йр▓░р▓┐р▓ор│Ир▓Хр▓│р▓┐р▓▓р│Бр▓ор│Н р▓Ър▓ор▓ор▓╛р▓┤р▓╡р▓░р│Нр▓Хр▓│р│Н. р▓Ер▓╡р▓░р│Нр▓Хр▓│р│Н р▓ир▓┐р▓пр▓╛р▓пр▓др│Нр▓др│Ир▓пр│Бр▓ор│Н р▓ор▓┤р▓Ър▓╛р▓Яр│Нр▓Ър▓┐р▓пр│Ир▓пр│Бр▓ор│Н р▓Зр▓пр▓▒р│Нр▓кр▓гр│Нр▓кр▓╛р▓Хр▓кр│Н р▓кр│Жр▓▒р│Нр▓▒р▓╡р▓░р│Нр▓Хр▓│р│Н. р▓Ер▓╡р▓░р│Нр▓Хр▓│р│Н р▓Тр▓░р│Бр▓╡р▓░р│Бр▓Яр▓┤р│Кр▓░р│Бр▓╡р▓░р│Н р▓Ър▓Хр│Лр▓др▓░ р▓Йр▓гр▓░р│Нр▓╡р│Бр▓кр│Н р▓кр▓╛р▓Щр│Нр▓Хр▓┐р▓▓р│Н р▓ир▓Яр▓ир│Нр▓др│Бр▓Хр│Кр▓│р│Нр▓│р▓▓р│Н р▓╡р│Зр▓гр│Нр▓Яр│Бр▓ор│Н.

р│ир│жр│йр▓╡р▓др│Б р▓ор▓┤р▓┐р▓др▓┤р│Н.

р▓Ър▓ир│Нр▓др▓Яр▓┐р▓пр│Жр▓┤р│Нр▓▒р│Б р▓ор▓▒р▓ир│Нр▓др▓╛р▓пр│Л! р▓Зр▓Щр│Нр▓Хр▓┐р▓▓р│Нр▓▓р│Ир▓пр│Л! р▓Ор▓др▓▒р│Нр▓Хр│Б р▓др▓пр│И р▓╡р▓░р▓╛р▓др│Бр▓Яр▓╛? р▓Зр▓░р▓╛р▓ор▓Ър│Нр▓Ър▓ир│Нр▓др▓┐р▓░р▓╛!
        `,
            Telu: `
р░ор░йр░┐р░др░кр▒Н р░кр░┐р░▒р░╡р░┐р░пр░┐р░йр░░р▒Н р░Ър░Хр░▓р░░р▒Бр░ор▒Н р░Ър▒Бр░др░ир▒Нр░др░┐р░░р░ор░╛р░Хр░╡р▒З р░кр░┐р░▒р░Хр▒Нр░Хр░┐р░йр▒Нр░┤р░йр░░р▒Н. р░Ер░╡р░░р▒Нр░Хр░│р▒Н р░ор░др░┐р░кр▒Нр░кр░┐р░▓р▒Бр░ор▒Н р░Йр░░р░┐р░ор▒Ир░Хр░│р░┐р░▓р▒Бр░ор▒Н р░Ър░ор░ор░╛р░йр░╡р░░р▒Нр░Хр░│р▒Н. р░Ер░╡р░░р▒Нр░Хр░│р▒Н р░ир░┐р░пр░╛р░пр░др▒Нр░др▒Ир░пр▒Бр░ор▒Н р░ор░йр░Ър░╛р░Яр▒Нр░Ър░┐р░пр▒Ир░пр▒Бр░ор▒Н р░Зр░пр░▒р▒Нр░кр░гр▒Нр░кр░╛р░Хр░кр▒Н р░кр▒Жр░▒р▒Нр░▒р░╡р░░р▒Нр░Хр░│р▒Н. р░Ер░╡р░░р▒Нр░Хр░│р▒Н р░Тр░░р▒Бр░╡р░░р▒Бр░Яр░йр▒Кр░░р▒Бр░╡р░░р▒Н р░Ър░Хр▒Лр░др░░ р░Йр░гр░░р▒Нр░╡р▒Бр░кр▒Н р░кр░╛р░Щр▒Нр░Хр░┐р░▓р▒Н р░ир░Яр░ир▒Нр░др▒Бр░Хр▒Кр░│р▒Нр░│р░▓р▒Н р░╡р▒Зр░гр▒Нр░Яр▒Бр░ор▒Н.

р▒ир▒жр▒йр░╡р░др▒Б р░ор░йр░┐р░др░йр▒Н.

р░Ър░ир▒Нр░др░Яр░┐р░пр▒Жр░йр▒Нр░▒р▒Б р░ор░▒р░ир▒Нр░др░╛р░пр▒Л! р░Зр░Щр▒Нр░Хр░┐р░▓р▒Нр░▓р▒Ир░пр▒Л! р░Ор░др░▒р▒Нр░Хр▒Б р░др░пр▒И р░╡р░░р░╛р░др▒Бр░Яр░╛? р░Зр░░р░╛р░ор░Ър▒Нр░Ър░ир▒Нр░др░┐р░░р░╛!
        `,
            Mlym: `
р┤ор┤йр┤┐р┤др┤кр╡Н р┤кр┤┐р┤▒р┤╡р┤┐р┤пр┤┐р┤йр┤░р╡Н р┤Ър┤Хр┤▓р┤░р╡Бр┤ор╡Н р┤Ър╡Бр┤др┤ир╡Нр┤др┤┐р┤░р┤ор┤╛р┤Хр┤╡р╡З р┤кр┤┐р┤▒р┤Хр╡Нр┤Хр┤┐р┤йр╡Нр┤┤р┤йр┤░р╡Н. р┤Ер┤╡р┤░р╡Нр┤Хр┤│р╡Н р┤ор┤др┤┐р┤кр╡Нр┤кр┤┐р┤▓р╡Бр┤ор╡Н р┤Йр┤░р┤┐р┤ор╡Ир┤Хр┤│р┤┐р┤▓р╡Бр┤ор╡Н р┤Ър┤ор┤ор┤╛р┤йр┤╡р┤░р╡Нр┤Хр┤│р╡Н. р┤Ер┤╡р┤░р╡Нр┤Хр┤│р╡Н р┤ир┤┐р┤пр┤╛р┤пр┤др╡Нр┤др╡Ир┤пр╡Бр┤ор╡Н р┤ор┤йр┤Ър┤╛р┤Яр╡Нр┤Ър┤┐р┤пр╡Ир┤пр╡Бр┤ор╡Н р┤Зр┤пр┤▒р╡Нр┤кр┤гр╡Нр┤кр┤╛р┤Хр┤кр╡Н р┤кр╡Жр┤▒р╡Нр┤▒р┤╡р┤░р╡Нр┤Хр┤│р╡Н. р┤Ер┤╡р┤░р╡Нр┤Хр┤│р╡Н р┤Тр┤░р╡Бр┤╡р┤░р╡Бр┤Яр┤йр╡Кр┤░р╡Бр┤╡р┤░р╡Н р┤Ър┤Хр╡Лр┤др┤░ р┤Йр┤гр┤░р╡Нр┤╡р╡Бр┤кр╡Н р┤кр┤╛р┤Щр╡Нр┤Хр┤┐р┤▓р╡Н р┤ир┤Яр┤ир╡Нр┤др╡Бр┤Хр╡Кр┤│р╡Нр┤│р┤▓р╡Н р┤╡р╡Зр┤гр╡Нр┤Яр╡Бр┤ор╡Н.

р╡ир╡▒р╡йр┤╡р┤др╡Б р┤ор┤йр┤┐р┤др┤йр╡Н.

р┤Ър┤ир╡Нр┤др┤Яр┤┐р┤пр╡Жр┤йр╡Нр┤▒р╡Б р┤ор┤▒р┤ир╡Нр┤др┤╛р┤пр╡Л! р┤Зр┤Щр╡Нр┤Хр┤┐р┤▓р╡Нр┤▓р╡Ир┤пр╡Л! р┤Ор┤др┤▒р╡Нр┤Хр╡Б р┤др┤пр╡И р┤╡р┤░р┤╛р┤др╡Бр┤Яр┤╛? р┤Зр┤░р┤╛р┤ор┤Ър╡Нр┤Ър┤ир╡Нр┤др┤┐р┤░р┤╛!
        `,
            Latn: `
man╠▒itap pit╠▒aviyin╠▒ar cakal╠▒arum cutantirama╠Дkave╠Д pit╠▒akkin╠▒r╠гan╠▒ar. avarkal╠г matippil╠▒um urimaikal╠гil╠▒um camama╠Дn╠▒avarkal╠г. avarkal╠г niya╠Дyattaiyum man╠▒aca╠Дt╠гciyaiyum iyat╠▒pan╠гpa╠Дkap pet╠▒t╠▒avarkal╠г. avarkal╠г oruvarut╠гan╠▒oruvar cako╠Дtara un╠гarvup pa╠Дn╠Зkil╠▒ nat╠гantukol╠гl╠гal╠▒ ve╠Дn╠гt╠гum.

203vatu man╠▒itan╠▒.

cantat╠гiyen╠▒t╠▒u mat╠▒anta╠Дyo╠Д! in╠Зkil╠▒l╠▒aiyo╠Д! etat╠▒ku tayai vara╠Дtut╠гa╠Д? ira╠Дmaccantira╠Д!
        `, };
        QUnit.test("Taml to Latn: ta text with punctuation, spacing, etc.", t => {
            t.deepEqual(
                transliterate("Taml", "Latn", textWithPunctuationAndSpacing.Taml,),
                textWithPunctuationAndSpacing.Latn,);
        },);
        QUnit.test("Latn to Taml: ta text with punctuation, spacing, etc.", t => {
            t.deepEqual(
                transliterate("Latn", "Taml", textWithPunctuationAndSpacing.Latn,),
                textWithPunctuationAndSpacing.Taml,);
        },);
        QUnit.test("Taml to Knda: ta text with punctuation, spacing, etc.", t => {
            t.deepEqual(
                transliterate("Taml", "Knda", textWithPunctuationAndSpacing.Taml,),
                textWithPunctuationAndSpacing.Knda,);
        },);
        QUnit.test("Knda to Taml: ta text with punctuation, spacing, etc.", t => {
            t.deepEqual(
                transliterate("Knda", "Taml", textWithPunctuationAndSpacing.Knda,),
                textWithPunctuationAndSpacing.Taml,);
        },);
        QUnit.test("Taml to Telu: ta text with punctuation, spacing, etc.", t => {
            t.deepEqual(
                transliterate("Taml", "Telu", textWithPunctuationAndSpacing.Taml,),
                textWithPunctuationAndSpacing.Telu,);
        },);
        QUnit.test("Telu to Taml: ta text with punctuation, spacing, etc.", t => {
            t.deepEqual(
                transliterate("Telu", "Taml", textWithPunctuationAndSpacing.Telu,),
                textWithPunctuationAndSpacing.Taml,);
        },);
        QUnit.test("Taml to Mlym: ta text with punctuation, spacing, etc.", t => {
            t.deepEqual(
                transliterate("Taml", "Mlym", textWithPunctuationAndSpacing.Taml,),
                textWithPunctuationAndSpacing.Mlym,);
        },);
        QUnit.test("Mlym to Taml: ta text with punctuation, spacing, etc.", t => {
            t.deepEqual(
                transliterate("Mlym", "Taml", textWithPunctuationAndSpacing.Mlym,),
                textWithPunctuationAndSpacing.Taml,);
        },);
    },);

    QUnit.module("sa", () => {
        const textWithPunctuationAndSpacing = {
            Gran: `
ЁСМ▓ЁСНЗЁСМЦЁСНЗЁСМ╖ЁСНБ ЁСМ╕ЁСМВЁСМ╕ЁСННЁСМХЁСНГЁСМдЁСМ╛ЁСМжЁСМ┐ЁСМдЁСМ░ЁСМ╛ ЁСМнЁСМ╛ЁСМ░ЁСМдЁСНАЁСМпЁСМнЁСМ╛ЁСМ╖ЁСМ╛ЁСМГ ЁСМкЁСННЁСМ░ЁСМ╛ЁСМжЁСНЗЁСМ╢ЁСМ┐ЁСМХЁСМнЁСМ╛ЁСМ╖ЁСМ╛ЁСМГ ЁСМкЁСННЁСМ░ЁСМ╛ЁСМиЁСННЁСМдЁСНАЁСМпЁСМнЁСМ╛ЁСМ╖ЁСМ╛ЁСМГ ЁСМЗЁСМдЁСННЁСМпЁСМнЁСМ┐ЁСМзЁСНАЁСМпЁСМиЁСННЁСМдЁСНЗ ред ЁСМЗЁСМдЁСННЁСМеЁСМВЁСМкЁСННЁСМ░ЁСМпЁСНЛЁСМЧЁСНЗЁСМг ЁСМ▓ЁСНЗЁСМЦЁСМХЁСМ╕ЁСННЁСМпЁСНЛЁСМжЁСННЁСМжЁСНЗЁСМ╢ЁСМ╛ЁСМ╕ЁСННЁСМдЁСННЁСМ░ЁСМпЁСНЛ ЁСМнЁСМ╛ЁСМ╕ЁСМиЁСННЁСМдЁСНЗ ред ЁСМкЁСННЁСМ░ЁСМеЁСМоЁСНЛ ЁСМпЁСМдЁСНН ЁСМ╕ЁСМВЁСМ╕ЁСННЁСМХЁСНГЁСМдЁСМнЁСМ╛ЁСМ╖ЁСМ╛ ЁСМнЁСМ╛ЁСМ░ЁСМдЁСНАЁСМпЁСМ╛ЁСМиЁСМ╛ЁСМВ ЁСМнЁСМ╛ЁСМ░ЁСМдЁСМжЁСНЗЁСМ╢ЁСМ╕ЁСННЁСМп ЁСМЪ ЁСМ░ЁСМ╛ЁСМ╖ЁСННЁСМЯЁСННЁСМ░ЁСМнЁСМ╛ЁСМ╖ЁСМ╛ ЁСМкЁСНВЁСМ░ЁСННЁСМ╡ЁСМоЁСМ╛ЁСМ╕ЁСНАЁСМдЁСНН ЁСМ╕ЁСМ╛ЁСМоЁСННЁСМкЁСННЁСМ░ЁСМдЁСМВ ЁСМ╡ЁСМ░ЁСННЁСМдЁСМдЁСНЗ ЁСМ╢ЁСННЁСМ╡ЁСНЛ ЁСМ╡ЁСМ╛ ЁСМнЁСМ╡ЁСНЗЁСМдЁСНН ред ЁСМЕЁСМиЁСННЁСМп ЁСМЙЁСМжЁСННЁСМжЁСНЗЁСМ╢ЁСМГ ЁСМ╕ЁСМВЁСМ╕ЁСННЁСМХЁСНГЁСМдЁСМ╛ЁСМжЁСНН ЁСМЗЁСМдЁСМ░ЁСМ╛ЁСМ╕ЁСМ╛ЁСМВ ЁСМнЁСМ╛ЁСМ╖ЁСМ╛ЁСМгЁСМ╛ЁСМоЁСНН ЁСМЕЁСМзЁСМ┐ЁСМХЁСМ╛ЁСМ░ЁСМГ ЁСМ╕ЁСННЁСМ╡ЁСМ╕ЁСННЁСМ╡ЁСМкЁСННЁСМ░ЁСМжЁСНЗЁСМ╢ЁСНЗЁСМ╖ЁСННЁСМ╡ЁСНЗЁСМ╡ЁСНЗЁСМдЁСМ┐ ред ЁСМдЁСНГЁСМдЁСНАЁСМп ЁСМЙЁСМжЁСННЁСМжЁСНЗЁСМ╢ЁСМ╛ЁСМ╕ЁСННЁСМдЁСНБ ЁСМЙЁСМХЁСННЁСМдЁСМ╛ЁСМнЁСННЁСМпЁСМ╛ЁСМВ ЁСМХЁСМ╛ЁСМ░ЁСМгЁСМ╛ЁСМнЁСННЁСМпЁСМ╛ЁСМВ ЁСМ╕ЁСМВЁСМ╕ЁСННЁСМХЁСНГЁСМдЁСМнЁСМ╛ЁСМ╖ЁСМ╛ ЁСМнЁСМ╛ЁСМ░ЁСМдЁСНАЁСМпЁСМнЁСМ╛ЁСМ╖ЁСМ╛ЁСМ╕ЁСНБ ЁСМ╕ЁСМ░ЁСННЁСМ╡ЁСМкЁСННЁСМ░ЁСМеЁСМоЁСМ╛ ЁСМЪЁСНЗЁСМдЁСМ┐ ред

рпкрп░рплЁСМдЁСМоЁСМ╕ЁСННЁСМп ЁСМЕЁСМ╣ЁСНЛЁСМмЁСМ┐ЁСМ▓ЁСМоЁСМаЁСМ╛ЁСМзЁСНАЁСМ╢ЁСМ╕ЁСННЁСМп ЁСМзЁСННЁСМпЁСМ╛ЁСМиЁСМ╢ЁСННЁСМ▓ЁСНЛЁСМХЁСМГ
ЁСМХЁСМЯЁСМ╛ЁСМХЁСННЁСМ╖ЁСМГ ЁСМЕЁСМ╕ЁСННЁСМп ЁСМЕЁСМ╕ЁСННЁСМдЁСНАЁСМдЁСМ┐ ЁСМЗЁСМиЁСННЁСМиЁСМиЁСННЁСМдЁСМВ ЁСМХЁСМЯЁСМ╛ЁСМХЁСННЁСМ╖ЁСНА ред ЁСМ╕ЁСМоЁСННЁСМмЁСНБЁСМжЁСННЁСМзЁСНМ ЁСМи ЁСМЩЁСМ┐ЁСМ╕ЁСМоЁСННЁСМмЁСНБЁСМжЁСННЁСМзЁСНМ ЁСМЗЁСМдЁСННЁСМпЁСМиЁСНЗЁСМи ЁСМХЁСМЯЁСМ╛ЁСМХЁСННЁСМ╖ЁСМ┐ЁСМиЁСНН ред ЁСМжЁСНЗЁСМ╡ЁСННЁСМпЁСМ╛ЁСМГ ЁСМ╕ЁСННЁСМдЁСННЁСМ░ЁСНАЁСМдЁСННЁСМ╡ЁСМ╛ЁСМдЁСНН ЁСМЛЁСМиЁСННЁСМиЁСНЗЁСМнЁСННЁСМпЁСНЛ ЁСМЩЁСНАЁСМкЁСНН ЁСМЗЁСМдЁСННЁСМпЁСМдЁСМГ ЁСМгЁСМдЁСННЁСМ╡ЁСМ╛ЁСМЪЁСННЁСМЪ ЁСМХЁСМЯЁСМ╛ЁСМХЁСННЁСМ╖ЁСМ┐ЁСМгЁСНА ЁСМ╕ЁСМоЁСННЁСМмЁСНБЁСМжЁСННЁСМзЁСНМ ЁСМПЁСМЩЁСННЁСМ╣ЁСННЁСМ░ЁСМ╕ЁСННЁСМ╡ЁСМ╛ЁСМдЁСННЁСМ╕ЁСМоЁСННЁСМмЁСНБЁСМжЁСННЁСМзЁСНЗЁСМГ ЁСМЗЁСМдЁСМ┐ ЁСМ╣ЁСННЁСМ░ЁСМ╕ЁСННЁСМ╡ЁСНЗЁСМХЁСМ╛ЁСМ░ЁСНЛ ЁСМ╡ЁСМ┐ЁСМ╣ЁСМ┐ЁСМдЁСМГ ЁСМдЁСМдЁСМГ ЁСМХЁСМЯЁСМ╛ЁСМХЁСННЁСМ╖ЁСМ┐ЁСМгЁСМ┐ ЁСМЗЁСМдЁСМ┐ ЁСМ╡ЁСМ╛ЁСМЪЁСННЁСМпЁСМоЁСНН ред ЁСМдЁСМеЁСНИЁСМ╡ ЁСМ╕ЁСМ╛ЁСМХЁСННЁСМ╖ЁСМ┐ЁСМгЁСМ┐ ред тЖй

ЁСМЕЁСМеЁСМ╛ЁСМиЁСННЁСМпЁСМнЁСМ╛ЁСМ╖ЁСМ╛ЁСМгЁСМ╛ЁСМоЁСМзЁСМ┐ЁСМХЁСМ╛ЁСМ░ЁСМГ ЁСМ╕ЁСННЁСМ╡ЁСМкЁСННЁСМ░ЁСМжЁСНЗЁСМ╖ЁСННЁСМ╡ЁСНЗЁСМ╡ЁСНЛЁСМд ЁСМиЁСНЗЁСМдЁСМ┐ ред ЁСМРЁСМдЁСМ┐ЁСМ╣ЁСМ╛ЁСМ╕ЁСМ┐ЁСМХЁСМнЁСМ╛ЁСМ╖ЁСМ╛ЁСМ╢ЁСМ╛ЁСМ╕ЁСННЁСМдЁСННЁСМ░ЁСНЗ ЁСМиЁСМ┐ЁСМкЁСНБЁСМгЁСМ╛ ЁСМоЁСМиЁСННЁСМ╡ЁСМдЁСНЗ ЁСМпЁСМдЁСНН ЁСМкЁСННЁСМ░ЁСМеЁСМоЁСМжЁСННЁСМ░ЁСМ╛ЁСМоЁСМ┐ЁСМбЁСМнЁСМ╛ЁСМ╖ЁСМпЁСМ╛ ЁСМХЁСМпЁСМ╛ЁСМЪЁСМ┐ЁСМжЁСНЗЁСМ╡ ЁСМжЁСМ╛ЁСМХЁСННЁСМ╖ЁСМ┐ЁСМгЁСМ╛ЁСМдЁСННЁСМпЁСНЗ ЁСМкЁСНБЁСМ░ЁСМ╛ ЁСМ╡ЁСННЁСМпЁСМ╛ЁСМ╣ЁСННЁСМ░ЁСМ┐ЁСМпЁСМдЁСНЗ ЁСМ╕ЁСННЁСМо ЁСМдЁСМ╕ЁСННЁСМпЁСМ╛ЁСМ╢ЁСННЁСМЪЁСМЪЁСННЁСМЫЁСМ╛ЁСМпЁСМ╛ ЁСМ╕ЁСМВЁСМ╕ЁСННЁСМХЁСНГЁСМдЁСМоЁСМкЁСМ┐ ЁСМкЁСМдЁСМ┐ЁСМдЁСМ╛ ред ЁСМоЁСНАЁСМиЁСМХЁСНБЁСМЯЁСНБЁСМоЁСННЁСМмЁСМиЁСНАЁСМ░ЁСМ╛ЁСМжЁСМпЁСМГ ЁСМ╢ЁСМмЁСННЁСМжЁСМ╛ЁСМГ ЁСМкЁСННЁСМ░ЁСМеЁСМоЁСМжЁСННЁСМ░ЁСМ╛ЁСМоЁСМ┐ЁСМбЁСМ╛ЁСМдЁСНН ЁСМ╕ЁСМЩЁСННЁСМЧЁСНГЁСМ╣ЁСНАЁСМдЁСМ╛ ЁСМЗЁСМдЁСМ┐ ЁСМ╕ЁСННЁСМкЁСМ╖ЁСННЁСМЯЁСМВ ЁСМпЁСМдЁСНЛ ЁСМжЁСННЁСМ░ЁСМ╛ЁСМоЁСМ┐ЁСМбЁСМнЁСМ╛ЁСМ╖ЁСМ╛ЁСМ╕ЁСНБ ЁСМдЁСМЪЁСННЁСМЫЁСМмЁСННЁСМжЁСНИЁСМГ ЁСМ╕ЁСМоЁСННЁСМмЁСМжЁСННЁСМзЁСМ╛ЁСМиЁСНАЁСМдЁСМ░ЁСМ╛ЁСМгЁСМ┐ ЁСМкЁСМжЁСМ╛ЁСМиЁСННЁСМпЁСМкЁСМ┐ ЁСМкЁСННЁСМ░ЁСМпЁСНБЁСМЬЁСННЁСМпЁСМиЁСННЁСМдЁСНЗ ЁСМпЁСНЗЁСМ╖ЁСМ╛ЁСМВ ЁСМ╡ЁСННЁСМпЁСМ╡ЁСМ╣ЁСМ╛ЁСМ░ЁСМГ ЁСМ╕ЁСМВЁСМ╕ЁСННЁСМХЁСНГЁСМдЁСНЗ ЁСМиЁСМ╛ЁСМ╕ЁСННЁСМдЁСМ┐ ред ЁСМкЁСНБЁСМиЁСМ╢ЁСННЁСМЪ ЁСМжЁСННЁСМ░ЁСМ╛ЁСМоЁСМ┐ЁСМбЁСМнЁСМ╛ЁСМ╖ЁСМ╛ЁСМ╕ЁСНБ ЁСМХЁСМдЁСМ┐ЁСМкЁСМпЁСМ╛ЁСМ╕ЁСНБ ЁСМжЁСМиЁСННЁСМдЁСННЁСМпЁСМ╛ЁСМХЁСННЁСМ╖ЁСМ░ЁСМ╛ЁСМгЁСМ┐ ЁСМоЁСНВЁСМ░ЁСННЁСМзЁСМиЁСННЁСМпЁСМ╛ЁСМХЁСННЁСМ╖ЁСМ░ЁСМ╛ЁСМгЁСМ┐ ЁСМ╡ЁСМ┐ЁСМ╣ЁСМ╛ЁСМп ЁСМ╡ЁСМ╛ЁСМпЁСНБЁСМХЁСНЛЁСМ╢ЁСНАЁСМпЁСМ╛ЁСМХЁСННЁСМ╖ЁСМ░ЁСМ╛ЁСМгЁСННЁСМпЁСМкЁСМ┐ ЁСМкЁСННЁСМ░ЁСМ╕ЁСМ┐ЁСМжЁСННЁСМзЁСМ╛ЁСМиЁСМ┐ ред ЁСМ╕ЁСМВЁСМ╕ЁСННЁСМХЁСНГЁСМдЁСМ╕ЁСМоЁСННЁСМмЁСМжЁСННЁСМзЁСНЗЁСМ╖ЁСНБ ЁСМнЁСМ╛ЁСМ╖ЁСМ╛ЁСМиЁСННЁСМдЁСМ░ЁСНЗЁСМ╖ЁСНБ ЁСМпЁСМ╡ЁСМиЁСМ╛ЁСМжЁСМ┐ЁСМ╖ЁСНБ ЁСМоЁСНВЁСМ░ЁСННЁСМзЁСМиЁСННЁСМпЁСМ╛ЁСМХЁСННЁСМ╖ЁСМ░ЁСМ╛ЁСМгЁСМ╛ЁСМоЁСМкЁСННЁСМпЁСМнЁСМ╛ЁСМ╡ЁСМ╛ЁСМдЁСНН ЁСМдЁСМ╛ЁСМиЁСМ┐ ЁСМоЁСНВЁСМ░ЁСННЁСМзЁСМиЁСННЁСМпЁСМ╛ЁСМХЁСННЁСМ╖ЁСМ░ЁСМ╛ЁСМгЁСМ┐ ЁСМиЁСМиЁСНБ ЁСМжЁСННЁСМ░ЁСМ╛ЁСМоЁСМ┐ЁСМбЁСМнЁСМ╛ЁСМ╖ЁСМ╛ЁСМнЁСННЁСМпЁСМГ ЁСМ╕ЁСМВЁСМ╕ЁСННЁСМХЁСНГЁСМдЁСМВ ЁСМкЁСННЁСМ░ЁСМ╡ЁСМ┐ЁСМ╖ЁСННЁСМЯЁСМ╛ЁСМиЁСМ┐ ЁСМ╕ЁСННЁСМпЁСНБЁСМГ ред ЁСМжЁСННЁСМ░ЁСМ╛ЁСМоЁСМ┐ЁСМбЁСМнЁСМ╛ЁСМ╖ЁСМ╛ЁСМгЁСМ╛ЁСМоЁСМзЁСМ┐ЁСМХЁСМ╛ЁСМ░ ЁСМЖЁСМнЁСМ╛ЁСМ░ЁСМдЁСМоЁСМеЁСМ╡ЁСМ╛ ЁСМиЁСННЁСМпЁСНВЁСМиЁСМ╛ЁСМдЁСМ┐ЁСМиЁСННЁСМпЁСНВЁСМиЁСМоЁСМ╛ЁСМжЁСМ╛ЁСМХЁСННЁСМ╖ЁСМ┐ЁСМгЁСМ╛ЁСМдЁСННЁСМпЁСМВ ЁСМ╡ЁСМ░ЁСННЁСМдЁСМдЁСНЗ ЁСМЗЁСМдЁСМ┐ ЁСМ╕ЁСМ╛ЁСМ░ЁСМГ ред
        `,
            Deva: `
рд▓реЗрдЦреЗрд╖реБ рд╕рдВрд╕реНрдХреГрддрд╛рджрд┐рддрд░рд╛ рднрд╛рд░рддреАрдпрднрд╛рд╖рд╛рдГ рдкреНрд░рд╛рджреЗрд╢рд┐рдХрднрд╛рд╖рд╛рдГ рдкреНрд░рд╛рдиреНрддреАрдпрднрд╛рд╖рд╛рдГ рдЗрддреНрдпрднрд┐рдзреАрдпрдиреНрддреЗ ред рдЗрддреНрдердВрдкреНрд░рдпреЛрдЧреЗрдг рд▓реЗрдЦрдХрд╕реНрдпреЛрджреНрджреЗрд╢рд╛рд╕реНрддреНрд░рдпреЛ рднрд╛рд╕рдиреНрддреЗ ред рдкреНрд░рдердореЛ рдпрддреН рд╕рдВрд╕реНрдХреГрддрднрд╛рд╖рд╛ рднрд╛рд░рддреАрдпрд╛рдирд╛рдВ рднрд╛рд░рддрджреЗрд╢рд╕реНрдп рдЪ рд░рд╛рд╖реНрдЯреНрд░рднрд╛рд╖рд╛ рдкреВрд░реНрд╡рдорд╛рд╕реАрддреН рд╕рд╛рдореНрдкреНрд░рддрдВ рд╡рд░реНрддрддреЗ рд╢реНрд╡реЛ рд╡рд╛ рднрд╡реЗрддреН ред рдЕрдиреНрдп рдЙрджреНрджреЗрд╢рдГ рд╕рдВрд╕реНрдХреГрддрд╛рджреН рдЗрддрд░рд╛рд╕рд╛рдВ рднрд╛рд╖рд╛рдгрд╛рдореН рдЕрдзрд┐рдХрд╛рд░рдГ рд╕реНрд╡рд╕реНрд╡рдкреНрд░рджреЗрд╢реЗрд╖реНрд╡реЗрд╡реЗрддрд┐ ред рддреГрддреАрдп рдЙрджреНрджреЗрд╢рд╛рд╕реНрддреБ рдЙрдХреНрддрд╛рднреНрдпрд╛рдВ рдХрд╛рд░рдгрд╛рднреНрдпрд╛рдВ рд╕рдВрд╕реНрдХреГрддрднрд╛рд╖рд╛ рднрд╛рд░рддреАрдпрднрд╛рд╖рд╛рд╕реБ рд╕рд░реНрд╡рдкреНрд░рдердорд╛ рдЪреЗрддрд┐ ред

рекрелрддрдорд╕реНрдп рдЕрд╣реЛрдмрд┐рд▓рдордард╛рдзреАрд╢рд╕реНрдп рдзреНрдпрд╛рдирд╢реНрд▓реЛрдХрдГ
рдХрдЯрд╛рдХреНрд╖рдГ рдЕрд╕реНрдп рдЕрд╕реНрддреАрддрд┐ рдЗрдиреНрдирдиреНрддрдВ рдХрдЯрд╛рдХреНрд╖реА ред рд╕рдореНрдмреБрджреНрдзреМ рди рдЩрд┐рд╕рдореНрдмреБрджреНрдзреМ рдЗрддреНрдпрдиреЗрди рдХрдЯрд╛рдХреНрд╖рд┐рдиреН ред рджреЗрд╡реНрдпрд╛рдГ рд╕реНрддреНрд░реАрддреНрд╡рд╛рддреН рдЛрдиреНрдиреЗрднреНрдпреЛ рдЩреАрдкреН рдЗрддреНрдпрддрдГ рдгрддреНрд╡рд╛рдЪреНрдЪ рдХрдЯрд╛рдХреНрд╖рд┐рдгреА рд╕рдореНрдмреБрджреНрдзреМ рдПрдЩреНрд╣реНрд░рд╕реНрд╡рд╛рддреНрд╕рдореНрдмреБрджреНрдзреЗрдГ рдЗрддрд┐ рд╣реНрд░рд╕реНрд╡реЗрдХрд╛рд░реЛ рд╡рд┐рд╣рд┐рддрдГ рддрддрдГ рдХрдЯрд╛рдХреНрд╖рд┐рдгрд┐ рдЗрддрд┐ рд╡рд╛рдЪреНрдпрдореН ред рддрдереИрд╡ рд╕рд╛рдХреНрд╖рд┐рдгрд┐ ред тЖй

рдЕрдерд╛рдиреНрдпрднрд╛рд╖рд╛рдгрд╛рдордзрд┐рдХрд╛рд░рдГ рд╕реНрд╡рдкреНрд░рджреЗрд╖реНрд╡реЗрд╡реЛрдд рдиреЗрддрд┐ ред рдРрддрд┐рд╣рд╛рд╕рд┐рдХрднрд╛рд╖рд╛рд╢рд╛рд╕реНрддреНрд░реЗ рдирд┐рдкреБрдгрд╛ рдордиреНрд╡рддреЗ рдпрддреН рдкреНрд░рдердорджреНрд░рд╛рдорд┐рдбрднрд╛рд╖рдпрд╛ рдХрдпрд╛рдЪрд┐рджреЗрд╡ рджрд╛рдХреНрд╖рд┐рдгрд╛рддреНрдпреЗ рдкреБрд░рд╛ рд╡реНрдпрд╛рд╣реНрд░рд┐рдпрддреЗ рд╕реНрдо рддрд╕реНрдпрд╛рд╢реНрдЪрдЪреНрдЫрд╛рдпрд╛ рд╕рдВрд╕реНрдХреГрддрдордкрд┐ рдкрддрд┐рддрд╛ ред рдореАрдирдХреБрдЯреБрдореНрдмрдиреАрд░рд╛рджрдпрдГ рд╢рдмреНрджрд╛рдГ рдкреНрд░рдердорджреНрд░рд╛рдорд┐рдбрд╛рддреН рд╕рдЩреНрдЧреГрд╣реАрддрд╛ рдЗрддрд┐ рд╕реНрдкрд╖реНрдЯрдВ рдпрддреЛ рджреНрд░рд╛рдорд┐рдбрднрд╛рд╖рд╛рд╕реБ рддрдЪреНрдЫрдмреНрджреИрдГ рд╕рдореНрдмрджреНрдзрд╛рдиреАрддрд░рд╛рдгрд┐ рдкрджрд╛рдиреНрдпрдкрд┐ рдкреНрд░рдпреБрдЬреНрдпрдиреНрддреЗ рдпреЗрд╖рд╛рдВ рд╡реНрдпрд╡рд╣рд╛рд░рдГ рд╕рдВрд╕реНрдХреГрддреЗ рдирд╛рд╕реНрддрд┐ ред рдкреБрдирд╢реНрдЪ рджреНрд░рд╛рдорд┐рдбрднрд╛рд╖рд╛рд╕реБ рдХрддрд┐рдкрдпрд╛рд╕реБ рджрдиреНрддреНрдпрд╛рдХреНрд╖рд░рд╛рдгрд┐ рдореВрд░реНрдзрдиреНрдпрд╛рдХреНрд╖рд░рд╛рдгрд┐ рд╡рд┐рд╣рд╛рдп рд╡рд╛рдпреБрдХреЛрд╢реАрдпрд╛рдХреНрд╖рд░рд╛рдгреНрдпрдкрд┐ рдкреНрд░рд╕рд┐рджреНрдзрд╛рдирд┐ ред рд╕рдВрд╕реНрдХреГрддрд╕рдореНрдмрджреНрдзреЗрд╖реБ рднрд╛рд╖рд╛рдиреНрддрд░реЗрд╖реБ рдпрд╡рдирд╛рджрд┐рд╖реБ рдореВрд░реНрдзрдиреНрдпрд╛рдХреНрд╖рд░рд╛рдгрд╛рдордкреНрдпрднрд╛рд╡рд╛рддреН рддрд╛рдирд┐ рдореВрд░реНрдзрдиреНрдпрд╛рдХреНрд╖рд░рд╛рдгрд┐ рдирдиреБ рджреНрд░рд╛рдорд┐рдбрднрд╛рд╖рд╛рднреНрдпрдГ рд╕рдВрд╕реНрдХреГрддрдВ рдкреНрд░рд╡рд┐рд╖реНрдЯрд╛рдирд┐ рд╕реНрдпреБрдГ ред рджреНрд░рд╛рдорд┐рдбрднрд╛рд╖рд╛рдгрд╛рдордзрд┐рдХрд╛рд░ рдЖрднрд╛рд░рддрдордерд╡рд╛ рдиреНрдпреВрдирд╛рддрд┐рдиреНрдпреВрдирдорд╛рджрд╛рдХреНрд╖рд┐рдгрд╛рддреНрдпрдВ рд╡рд░реНрддрддреЗ рдЗрддрд┐ рд╕рд╛рд░рдГ ред
        `,
            Latn: `
le╠Дkhe╠Дs╠гu sam╠Зskr╠еta╠Дditara╠Д bha╠Дrati╠Дyabha╠Дs╠гa╠Дh╠г pra╠Дde╠Дs╠Бikabha╠Дs╠гa╠Дh╠г pra╠Дnti╠Дyabha╠Дs╠гa╠Дh╠г ityabhidhi╠Дyante╠Д ред ittham╠Зprayo╠Дge╠Дn╠гa le╠Дkhakasyo╠Дdde╠Дs╠Бa╠Дstrayo╠Д bha╠Дsante╠Д ред prathamo╠Д yat sam╠Зskr╠еtabha╠Дs╠гa╠Д bha╠Дrati╠Дya╠Дna╠Дm╠З bha╠Дratade╠Дs╠Бasya ca ra╠Дs╠гt╠гrabha╠Дs╠гa╠Д pu╠Дrvama╠Дsi╠Дt sa╠Дmpratam╠З vartate╠Д s╠Бvo╠Д va╠Д bhave╠Дt ред anya udde╠Дs╠Бah╠г sam╠Зskr╠еta╠Дd itara╠Дsa╠Дm╠З bha╠Дs╠гa╠Дn╠гa╠Дm adhika╠Дrah╠г svasvaprade╠Дs╠Бe╠Дs╠гve╠Дve╠Дti ред tr╠еti╠Дya udde╠Дs╠Бa╠Дstu ukta╠Дbhya╠Дm╠З ka╠Дran╠гa╠Дbhya╠Дm╠З sam╠Зskr╠еtabha╠Дs╠гa╠Д bha╠Дrati╠Дyabha╠Дs╠гa╠Дsu sarvaprathama╠Д ce╠Дti ред

45tamasya aho╠Дbilamat╠гha╠Дdhi╠Дs╠Бasya dhya╠Дnas╠Бlo╠Дkah╠г
kat╠гa╠Дks╠гah╠г asya asti╠Дti innantam╠З kat╠гa╠Дks╠гi╠Д ред sambuddhau na n╠Зisambuddhau ityane╠Дna kat╠гa╠Дks╠гin ред de╠Дvya╠Дh╠г stri╠Дtva╠Дt r╠еnne╠Дbhyo╠Д n╠Зi╠Дp ityatah╠г n╠гatva╠Дcca kat╠гa╠Дks╠гin╠гi╠Д sambuddhau e╠Дn╠Зhrasva╠Дtsambuddhe╠Дh╠г iti hrasve╠Дka╠Дro╠Д vihitah╠г tatah╠г kat╠гa╠Дks╠гin╠гi iti va╠Дcyam ред tathaiva sa╠Дks╠гin╠гi ред тЖй

atha╠Дnyabha╠Дs╠гa╠Дn╠гa╠Дmadhika╠Дrah╠г svaprade╠Дs╠гve╠Дvo╠Дta ne╠Дti ред aitiha╠Дsikabha╠Дs╠гa╠Дs╠Бa╠Дstre╠Д nipun╠гa╠Д manvate╠Д yat prathamadra╠Дmid╠гabha╠Дs╠гaya╠Д kaya╠Дcide╠Дva da╠Дks╠гin╠гa╠Дtye╠Д pura╠Д vya╠Дhriyate╠Д sma tasya╠Дs╠Бcaccha╠Дya╠Д sam╠Зskr╠еtamapi patita╠Д ред mi╠Дnakut╠гumbani╠Дra╠Дdayah╠г s╠Бabda╠Дh╠г prathamadra╠Дmid╠гa╠Дt san╠Зgr╠еhi╠Дta╠Д iti spas╠гt╠гam╠З yato╠Д dra╠Дmid╠гabha╠Дs╠гa╠Дsu tacchabdaih╠г sambaddha╠Дni╠Дtara╠Дn╠гi pada╠Дnyapi prayujyante╠Д ye╠Дs╠гa╠Дm╠З vyavaha╠Дrah╠г sam╠Зskr╠еte╠Д na╠Дsti ред punas╠Бca dra╠Дmid╠гabha╠Дs╠гa╠Дsu katipaya╠Дsu dantya╠Дks╠гara╠Дn╠гi mu╠Дrdhanya╠Дks╠гara╠Дn╠гi viha╠Дya va╠Дyuko╠Дs╠Бi╠Дya╠Дks╠гara╠Дn╠гyapi prasiddha╠Дni ред sam╠Зskr╠еtasambaddhe╠Дs╠гu bha╠Дs╠гa╠Дntare╠Дs╠гu yavana╠Дdis╠гu mu╠Дrdhanya╠Дks╠гara╠Дn╠гa╠Дmapyabha╠Дva╠Дt ta╠Дni mu╠Дrdhanya╠Дks╠гara╠Дn╠гi nanu dra╠Дmid╠гabha╠Дs╠гa╠Дbhyah╠г sam╠Зskr╠еtam╠З pravis╠гt╠гa╠Дni syuh╠г ред dra╠Дmid╠гabha╠Дs╠гa╠Дn╠гa╠Дmadhika╠Дra a╠Дbha╠Дratamathava╠Д nyu╠Дna╠Дtinyu╠Дnama╠Дda╠Дks╠гin╠гa╠Дtyam╠З vartate╠Д iti sa╠Дrah╠г ред
        `, };

        QUnit.test("Gran to Latn: sa text with punctuation, spacing, etc.", t => {
            t.deepEqual(
                transliterate("Gran", "Latn", textWithPunctuationAndSpacing.Gran,),
                textWithPunctuationAndSpacing.Latn,);
        },);
        QUnit.test("Latn to Gran: sa text with punctuation, spacing, etc.", t => {
            t.deepEqual(
                transliterate("Latn", "Gran", textWithPunctuationAndSpacing.Latn,),
                textWithPunctuationAndSpacing.Gran,);
        },);
        QUnit.test("Gran to Deva: sa text with punctuation, spacing, etc.", t => {
            t.deepEqual(
                transliterate("Gran", "Deva", textWithPunctuationAndSpacing.Gran,),
                textWithPunctuationAndSpacing.Deva,);
        },);
        QUnit.test("Deva to Gran: sa text with punctuation, spacing, etc.", t => {
            t.deepEqual(
                transliterate("Deva", "Gran", textWithPunctuationAndSpacing.Deva,),
                textWithPunctuationAndSpacing.Gran,);
        },);
    },);
},);

QUnit.module("Invalid inputs", () => {
    QUnit.test("Invalid Ta text in Taml", t => {
        const invalidTaTamlText = "роХрпБро▒ро┐рокрпНрокро╛роХ, роЗро╡рпНро╡ро┐родро┐роорпБро▒рпИ рокрпЖропро░рпНроХро│рпБроХрпНроХрпБроорпН рокрпКро░рпБроирпНродрпБроорпН: роЗро░ро╛роороиро╛родрокрпБро░родрпНродрпИроЪрпН роЪрпЗро░рпНроирпНродро╡ро░рпН роЗро░ро╛роороиро╛родрокрпБро░родрпНродрпБроЪрпН роЪрпАройро┐ро╡ро╛роЪ роЕропрпНропроЩрпНроХро╛ро░рпН.";
        t.throws(
            () => transliterate("Taml", "Latn", invalidTaTamlText,),
            err => err instanceof Error &&
                /^Unknown Taml character: .\.$/v.test(err.message,),
        );
    },);
    QUnit.test("Invalid Ta text in Latn", t => {
        const invalidTaLatnText = "роХрпБро▒ро┐рокрпНрокро╛роХ, роЗро╡рпНро╡ро┐родро┐роорпБро▒рпИ рокрпЖропро░рпНроХро│рпБроХрпНроХрпБроорпН рокрпКро░рпБроирпНродрпБроорпН: роЗро░ро╛роороиро╛родрокрпБро░родрпНродрпИроЪрпН роЪрпЗро░рпНроирпНродро╡ро░рпН роЗро░ро╛роороиро╛родрокрпБро░родрпНродрпБроЪрпН роЪрпАройро┐ро╡ро╛роЪ роЕропрпНропроЩрпНроХро╛ро░рпН.";
        t.throws(
            () => transliterate("Latn", "Taml", invalidTaLatnText,),
            err => err instanceof Error &&
                /^Unknown Taml character: .\.$/v.test(err.message,),
        );
    },);

    QUnit.test.each("Invalid Tamil number", [
        "рпирпй",
        "рп░рп░",
        "рп░рп▒",
        "рпзрп▒",
        "рпйрп▓рпирп░рпнрп▓рп▓рп▒рппрп░рпп",
    ], (t, invalidNumber,) => {
        t.throws(
            () => transliterate("Taml", "Latn", invalidNumber,),
            err => err instanceof Error &&
                new RegExp(`^Invalid number: ${invalidNumber}.$`, "v",).test(err.message,),
        );
    },);

    const unsupportedScriptName = "sinh";
    QUnit.test("Unsupported source script", t => {
        t.throws(
            () => transliterate(unsupportedScriptName, "Latn", "",),
            err => err instanceof Error &&
                new RegExp(`^Unsupported or invalid source script: ${unsupportedScriptName}.$`, "v",).test(err.message,),
        );
    },);
    QUnit.test("Unsupported target script", t => {
        t.throws(
            () => transliterate("Latn", unsupportedScriptName, "",),
            err => err instanceof Error &&
                new RegExp(`^Unsupported or invalid target script: ${unsupportedScriptName}.$`, "v",).test(err.message,),
        );
    },);
},);
